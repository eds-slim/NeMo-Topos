data<-within(data,{
side<-as.factor(side);
condition<-as.factor(condition);
id<-as.factor(id);
})
require(lme4)
LM<-lm(x~side+condition,data=data)
anova(LM)
summary(LM)
LM.r<-lmer(x~side+condition+(1|id),data=data)
anova(LM.r)
summary(LM.r)
str(data)
n<-1000; #number of subjects
data<-setNames(data.frame(matrix(ncol = 4, nrow = 0)), c("id", "side", "condition","x"))
# side:     0=left, 1-right
# condition:0=control, 1=affected, 2=not affected
mu<-3
mu.right<-.5
mu.affected<--.2
mu.unaffected<--.1
for(i in 1:n){
random.effect<-rnorm(1,0,2):
if(rbinom(1,1,.5)==0){
#control
data[nrow(data)+1,]<-c(i,0,0, mu + random.effect + rnorm(1,0,1)); #left
data[nrow(data)+1,]<-c(i,1,0, mu + random.effect + mu.right + rnorm(1,0,1)); #right
}
else{
#patient
if(rbinom(1,1,.5)==0){
#left affected
data[nrow(data)+1,]<-c(i,0,1, mu + random.effect + mu.affected + rnorm(1,0,1)); #left
data[nrow(data)+1,]<-c(i,1,2, mu + random.effect + mu.unaffected + mu.right + rnorm(1,0,1)); #right
}
else{
#right affected
data[nrow(data)+1,]<-c(i,0,2, mu + random.effect + mu.unaffected + rnorm(1,0,1)); #left
data[nrow(data)+1,]<-c(i,1,1, mu + random.effect + mu.affected + mu.right + rnorm(1,0,1)); #right
}
}
}
data<-within(data,{
side<-as.factor(side);
condition<-as.factor(condition);
id<-as.factor(id);
})
require(lme4)
LM<-lm(x~side+condition,data=data)
anova(LM)
summary(LM)
LM.r<-lmer(x~side+condition+(1|id),data=data)
anova(LM.r)
summary(LM.r)
str(data)
n<-1000; #number of subjects
data<-setNames(data.frame(matrix(ncol = 4, nrow = 0)), c("id", "side", "condition","x"))
# side:     0=left, 1-right
# condition:0=control, 1=affected, 2=not affected
mu<-3
mu.right<-.5
mu.affected<--.2
mu.unaffected<--.1
for(i in 1:n){
random.effect<-rnorm(1,0,2):
if(rbinom(1,1,.5)==0){
#control
data[nrow(data)+1,]<-c(i,0,0, mu + random.effect + rnorm(1,0,1)); #left
data[nrow(data)+1,]<-c(i,1,0, mu + random.effect + mu.right + rnorm(1,0,1)); #right
}
else{
#patient
if(rbinom(1,1,.5)==0){
#left affected
data[nrow(data)+1,]<-c(i,0,1, mu + random.effect + mu.affected + rnorm(1,0,1)); #left
data[nrow(data)+1,]<-c(i,1,2, mu + random.effect + mu.unaffected + mu.right + rnorm(1,0,1)); #right
}
else{
#right affected
data[nrow(data)+1,]<-c(i,0,2, mu + random.effect + mu.unaffected + rnorm(1,0,1)); #left
data[nrow(data)+1,]<-c(i,1,1, mu + random.effect + mu.affected + mu.right + rnorm(1,0,1)); #right
}
}
}
n<-1000; #number of subjects
data<-setNames(data.frame(matrix(ncol = 4, nrow = 0)), c("id", "side", "condition","x"))
# side:     0=left, 1-right
# condition:0=control, 1=affected, 2=not affected
mu<-3
mu.right<-.5
mu.affected<--.2
mu.unaffected<--.1
for(i in 1:n){
random.effect<-rnorm(1,0,2);
if(rbinom(1,1,.5)==0){
#control
data[nrow(data)+1,]<-c(i,0,0, mu + random.effect + rnorm(1,0,1)); #left
data[nrow(data)+1,]<-c(i,1,0, mu + random.effect + mu.right + rnorm(1,0,1)); #right
}
else{
#patient
if(rbinom(1,1,.5)==0){
#left affected
data[nrow(data)+1,]<-c(i,0,1, mu + random.effect + mu.affected + rnorm(1,0,1)); #left
data[nrow(data)+1,]<-c(i,1,2, mu + random.effect + mu.unaffected + mu.right + rnorm(1,0,1)); #right
}
else{
#right affected
data[nrow(data)+1,]<-c(i,0,2, mu + random.effect + mu.unaffected + rnorm(1,0,1)); #left
data[nrow(data)+1,]<-c(i,1,1, mu + random.effect + mu.affected + mu.right + rnorm(1,0,1)); #right
}
}
}
data<-within(data,{
side<-as.factor(side);
condition<-as.factor(condition);
id<-as.factor(id);
})
require(lme4)
LM<-lm(x~side+condition,data=data)
anova(LM)
summary(LM)
LM.r<-lmer(x~side+condition+(1|id),data=data)
anova(LM.r)
summary(LM.r)
str(data)
summary(LM)
summary(LM.r)
LM.r2<-lmer(x~side+condition+(1|id),data=data[data$condition%in%c("1","2"),])
anova(LM.r2)
summary(LM.r2)
quit(save='yes')
devtools::install_github('cttobin/ggthemr')
require(ggthemr)
setwd("~/Documents/NeMo-Topos")
asz<-86
labels<- read.table(paste('./labels', asz, '.txt', sep = ''))
labels<-labels$V1
clinical<-read.csv('./ClinicalData/clinicaldata.txt', header = T)
cortical<-read.csv(paste('./liste_right_', asz, '.txt', sep = ''), header = TRUE, sep = ' ')
ChaCo <- read.csv(paste('ChaCo', asz, '_right.txt', sep = ""), header = T)
str(cortical)
str(ChaCo)
labels
cortical$roi.ID
unique(cortical$roi.ID)
labels
unique(ChaCo$roi.ID)
unique(ChaCo$Region)
levels(ChaCo$Region)
levels(as.factor(ChaCo$Region))
levels(as.factor(ChaCo$Region))<-levels(cortical$roi.ID)
levels(as.factor(ChaCo$Region))
levels(as.factor(cortical$roi.ID))
labels
levels(as.factor(ChaCo$Region))<-labels
levels(as.factor(ChaCo$Region))<-labels
levels(as.factor(ChaCo$Region))
levels(as.factor(ChaCo$Region))<-labels
ChaCo$Region <- labels[ChaCo$Region]
ChaCo <- read.csv(paste('ChaCo', asz, '_right.txt', sep = ""), header = T)
ChaCo$Region <- as.factor(labels[ChaCo$Region])
unique(ChaCo$Region)
unique(cortical$roi.ID)
?drp[]
?drop
unique(cortical$roi.ID)[1:40]
unique(ChaCo$Region)[1:43]
unique(ChaCo$Region)
ChaCo<-ChaCo[ChaCo$Region !%in% c('Cerebellum_Cortex_L', 'Cerebellum_Cortex_R', 'Accumbens_area_L', 'Accumbens_area_R', 'Hypothalamus_L', 'Hypothalamus_R'),]
ChaCo<-ChaCo[!ChaCo$Region %in% c('Cerebellum_Cortex_L', 'Cerebellum_Cortex_R', 'Accumbens_area_L', 'Accumbens_area_R', 'Hypothalamus_L', 'Hypothalamus_R'),]
strsplit()
?strsplit
s<-"MNIbin_left-Amygdala.nii.gz "
s[3:-3]
substr(s,7,-8)
?substr
substr(s,7,length(s)-8)
length(s)
substr(s,7,nchar(s)-8)
substr(s,8,nchar(s)-8)
?toupper
s<-substr(s,8,nchar(s)-8)
x<-strsplit(s,"-")
x
x[1]
x[1,1]
x[1][1]
x[[1]
]
x[[1][1]
x[[1]][1]
tidyroiID<-function(s){
tidyroiID<-function(s){
tidyroiID<-function(s){
s<-substr(s,8,nchar(s)-8)
x<-strsplit(s,"-")
if(x[[1]][1] %in% c("left","lh")){
hemi<-"L"
}else{
hemi<-"R"
};
u<-paste(toupper(substring(x[[1]][2], 1, 1)), substring(x[[1]][2], 2), sep = "", collapse = " ");
return(paste(u,s,sep = "_"));
}
tidyroiID("MNIbin_lh-parsopercularis.nii.gz")
tidyroiID<-function(s){
s<-substr(s,8,nchar(s)-8)
x<-strsplit(s,"-")
if(x[[1]][1] %in% c("left","lh")){
hemi<-"L"
}else{
hemi<-"R"
};
u<-paste(toupper(substring(x[[1]][2], 1, 1)), substring(x[[1]][2], 2), sep = "", collapse = " ");
return(paste(u,hemi,sep = "_"));
}
tidyroiID("MNIbin_lh-parsopercularis.nii.gz")
tidyroiID<-function(s){
s<-substr(s,8,nchar(s)-7)
x<-strsplit(s,"-")
if(x[[1]][1] %in% c("left","lh")){
hemi<-"L"
}else{
hemi<-"R"
};
u<-paste(toupper(substring(x[[1]][2], 1, 1)), substring(x[[1]][2], 2), sep = "", collapse = " ");
return(paste(u,hemi,sep = "_"));
}
tidyroiID("MNIbin_lh-parsopercularis.nii.gz")
?lapply
lapply(cortical$roi.ID,tidyroiID)
lapply(as.character(cortical$roi.ID),tidyroiID)
unlist(lapply(as.character(cortical$roi.ID),tidyroiID))
cortical$roi.ID <- unlist(lapply(as.character(cortical$roi.ID),tidyroiID))
levels(cortical$roi.ID)
cortical<-read.csv(paste('./liste_right_', asz, '.txt', sep = ''), header = TRUE, sep = ' ')
tidyroiID<-function(s){
s<-substr(s,8,nchar(s)-7)
x<-strsplit(s,"-")
if(x[[1]][1] %in% c("left","lh")){
hemi<-"L"
}else{
hemi<-"R"
};
u<-paste(toupper(substring(x[[1]][2], 1, 1)), substring(x[[1]][2], 2), sep = "", collapse = " ");
return(paste(u,hemi,sep = "_"));
}
cortical$roi.ID <- as.factor(unlist(lapply(as.character(cortical$roi.ID),tidyroiID)))
levels(cortical$roi.ID)
levels(ChaCo$Region)
ChaCo <- read.csv(paste('ChaCo', asz, '_right.txt', sep = ""), header = T)
ChaCo$Region <- as.factor(labels[ChaCo$Region])
ChaCo<-ChaCo[!ChaCo$Region %in% c('Cerebellum_Cortex_L', 'Cerebellum_Cortex_R', 'Accumbens_area_L', 'Accumbens_area_R', 'Hypothalamus_L', 'Hypothalamus_R'),]
levels(ChaCo$Region)
ChaCo<-droplevels(ChaCo[!ChaCo$Region %in% c('Cerebellum_Cortex_L', 'Cerebellum_Cortex_R', 'Accumbens_area_L', 'Accumbens_area_R', 'Hypothalamus_L', 'Hypothalamus_R'),])
levels(ChaCo$Region)
names(cortical)
names(ChaCo)[c(1,2)]
names(cortical)[c(1,2)]<-names(ChaCo)[c(1,2)]
cortical
names(cortical)
clinical
names(ChaCo)
data<-merge(clinical, cortical)
data<-merge(data, ChaCo)
str(cortical)
require(ggplot2)
ggplot(data, aes(x=ChaCo_mean, y=quotient))+
geom_point()
ggplot(data, aes(x=ChaCo_mean, y=quotient, color=Region))+
geom_point()
ggplot(data, aes(x=ChaCo_mean, y=quotient, color=Region))+
geom_point()+
guides(color=F)
str(clinical)
ggplot(data, aes(x=ChaCo_mean, y=NIHSS, color=Region))+
geom_point()+
guides(color=F)
ggplot(data, aes(x=ChaCo_mean, y=NIHSS, color=Region))+
geom_point()+
geom_smooth(method+"lm")
guides(color=F)
ggplot(data, aes(x=ChaCo_mean, y=NIHSS, color=Region))+
geom_point()+
geom_smooth(method+"lm")=
guides(color=F)
ggplot(data, aes(x=ChaCo_mean, y=NIHSS, color=Region))+
geom_point()+
geom_smooth(method+"lm")+
guides(color=F)
ggplot(data, aes(x=ChaCo_mean, y=NIHSS, color=Region))+
geom_point()+
geom_smooth(method="lm")+
guides(color=F)
facet_wrap()
facet_wrap(.~Region, scales = "free")
ggplot(data, aes(x=ChaCo_mean, y=NIHSS, color=Region))+
geom_point()+
geom_smooth(method="lm")+
guides(color=F)+
facet_wrap(.~Region, scales = "free")
?substr
substr("bla_L", nchar("bla_L")-1)
substr("bla_L", nchar("bla_L")-1,0)
substr("bla_L", nchar("bla_L")-1,nchar("bla_L")-1)
last("sdfdf")
substr("bla_L", nchar("bla_L")-1,nchar("bla_L"))
substr("bla_L", nchar("bla_L"),nchar("bla_L"))
last<-function(s){return(substr(s, nchar(s),nchar(s)))}
d<-data[last(data$Region) != "L",]
d<-data[last(as.character(data$Region)) != "L",]
require(ggplot2)
ggplot(d, aes(x=ChaCo_mean, y=NIHSS, color=Region))+
geom_point()+
geom_smooth(method="lm")+
guides(color=F)+
facet_wrap(.~Region, scales = "free")
str(clinical)
ggplot(d, aes(x=ChaCo_mean, y=lighttouch, color=Region))+
geom_point()+
geom_smooth(method="lm")+
guides(color=F)+
facet_wrap(.~Region, scales = "free")
install.packages("mlr")
install.packages("ggeffects")
c
require(ggeffects)
fit<-lm(NIHSS~volume+quotient+ChaCo_mean, data=d)
summary(fit)
require(nlme)
fit<-lme(NIHSS~volume+quotient+ChaCo_mean, random=~1|subjID, data=d)
summary(fit)
fit<-lme(NIHSS~volume+quotient+ChaCo_mean, random=~1+quotient+ChaCo_mean|subjID, data=d)
fit<-lme(NIHSS~volume+quotient+ChaCo_mean, random=~1+quotient|subjID, data=d)
fit<-lme(NIHSS~volume+quotient+ChaCo_mean, random=~1|subjID, data=d)
summary(fit)
fit<-lme(NIHSS~volume+quotient+ChaCo_mean, random=~1|subjID/Region, data=d)
fit<-lme(NIHSS~volume+quotient+ChaCo_mean, random=~1|Region/subjID, data=d)
summary(fit)
fit<-lme(NIHSS~volume+quotient+ChaCo_mean, random=~1|subjID/Region, data=d)
fit<-lme(NIHSS~volume+quotient+ChaCo_mean, random=~1|subjID/Region, data=d, control=lmeControl(returnObject=TRUE)))
fit<-lme(NIHSS~volume+quotient+ChaCo_mean, random=~1|subjID/Region, data=d, control=lmeControl(returnObject=TRUE))
fit<-lme(NIHSS~volume+quotient+ChaCo_mean, random=~1|subjID/Region, data=d, control=lmeControl((singular.ok=TRUE, returnObject=TRUE))
fit<-lme(NIHSS~volume+quotient+ChaCo_mean, random=~1|subjID/Region, data=d, control=lmeControl(singular.ok=TRUE, returnObject=TRUE))
?lmeControl
fit<-lme(NIHSS~volume+quotient+ChaCo_mean, random=~1|subjID/Region, data=d, control=lmeControl(opt="opt",singular.ok=TRUE, returnObject=TRUE))
fit<-lme(NIHSS~volume+quotient+ChaCo_mean, random=~1|subjID/Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
summary(fit)
intervals(ranef(fit))
plot(ranef(fit))
fit<-lme(NIHSS~volume+quotient+ChaCo_mean, random=~1|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
summary(fit)
plot(ranef(fit))
plotxy(ranef(fit))
plot(ranef(fit))
fit<-lme(NIHSS~volume+quotient+ChaCo_mean, random=~1+quotient|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
summary(fit)
plot(ranef(fit))
fit<-lme(NIHSS~volume+quotient+ChaCo_mean, random=~1+quotient+ChaCo_mean|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
summary(fit)
plot(ranef(fit))
ggplot(d, aes(x=ChaCo_mean, y=lighttouch, color=Region))+
geom_point()+
geom_smooth(method="lm", se=F)+
guides(color=F)
guides(color=F)
ggplot(d, aes(x=ChaCo_mean, y=NIHSS, color=Region))+
geom_point()+
geom_smooth(method="lm", se=F)+
guides(color=F)
guides(color=F)
ggplot(d, aes(x=quotient, y=NIHSS, color=Region))+
geom_point()+
geom_smooth(method="lm", se=F)+
guides(color=F)
fit<-lm(NIHSS~volume+quotient+ChaCo_mean, data=d)
ggpredict(fit)
plot(ggpredict(fit))
plot(ggpredict(fit), facets = T)
plot(ggpredict(fit), facets = T, rawdata = T)
fit<-lm(NIHSS~volume+quotient+ChaCo_mean=Region, data=d)
fit<-lm(NIHSS~volume+quotient+ChaCo_mean+Region, data=d)
plot(ggpredict(fit), facets = T, rawdata = T)
fit<-lm(NIHSS~volume+quotient+ChaCo_mean, data=d)
plot(ggpredict(fit), facets = T, rawdata = T)
fit<-lme(quotient~volume+ChaCo_mean, random=~1+quotient+ChaCo_mean|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
fit<-lme(quotient~volume+ChaCo_mean, random=~1+ChaCo_mean|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
fit<-lme(quotient~volume+ChaCo_mean, random=~1+ChaCo_mean|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
summary(fit)
plot(ranef(fit))
fit<-lme(quotient~volume+ChaCo_mean, random=~1+ChaCo_mean/Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
fit<-lme(quotient~volume+ChaCo_mean, random=~1+ChaCo_mean|subjID, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
summary(fit)
fit<-lme(quotient~volume+ChaCo_mean, random=~1+ChaCo_mean|subjID/Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
ggplot(d, aes(x=ChaCo_mean, y=quotient, color=Region))+
geom_point()+
geom_smooth(method="lm", se=F)+
guides(color=F)
fit<-lme(quotient~volume+ChaCo_mean, random=~1+ChaCo_mean|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
summary(fit)
plot(ranef(fit))
plot(intervals(ranef(fit)))
?intervals
plot(intervals(fit))
intervals(fit)
ggplot(d, aes(x=ChaCo_mean, y=quotient, color=Region))+
geom_point()+
geom_smooth(method="lm", se=T)+
guides(color=F)
ggplot(d, aes(x=ChaCo_mean, y=quotient, color=Region))+
geom_point()+
geom_smooth(method="lm", se=F)+
guides(color=F)
fit<-lme(ChaCo_mean~volume+quotient, random=~1+quotient|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
summary(fit)
fit<-lme(ChaCo_mean~volume+quotient, random=~1+quotient=volume|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
fit<-lme(ChaCo_mean~volume+quotient, random=~1+quotient+volume|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
summary(fit)
lm.full<-lme(NIHSS~ChaCo_mean+volume+quotient, random=~1+quotient+volume|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
lm.null<-lme(NIHSS~volume+quotient, random=~1+quotient+volume|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
anova(lm.full, lm.null)
lm.full<-lme(NIHSS~ChaCo_mean+volume+quotient, random=~1+quotient+volume|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE), method = "ML")
lm.null<-lme(NIHSS~volume+quotient, random=~1+quotient+volume|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE), method = "ML")
anova(lm.full, lm.null)
lm.full<-lme(lighttouch~ChaCo_mean+volume+quotient, random=~1+quotient+volume|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE), method = "ML")
lm.null<-lme(lighttouch~volume+quotient, random=~1+quotient+volume|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE), method = "ML")
anova(lm.full, lm.null)
lm.full<-lme(lighttouch~ChaCo_mean+volume+quotient, random=~1|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE), method = "ML")
lm.null<-lme(lighttouch~volume+quotient, random=~1|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE), method = "ML")
anova(lm.full, lm.null)
lm.full<-lme(NIHSS~ChaCo_mean+volume+quotient, random=~1|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE), method = "ML")
lm.null<-lme(NIHSS~volume+quotient, random=~1|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE), method = "ML")
anova(lm.full, lm.null)
lm.full<-lme(NIHSS~ChaCo_mean+log(volume)+quotient, random=~1|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE), method = "ML")
lm.null<-lme(NIHSS~log(volume)+quotient, random=~1|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE), method = "ML")
anova(lm.full, lm.null)
plot(lm.full)
lm.full<-lme(NIHSS~ChaCo_mean+log(volume)+quotient, random=~1|subjID/Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE), method = "ML")
lm.null<-lme(NIHSS~log(volume)+quotient, random=~1|subjID/Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE), method = "ML")
anova(lm.full, lm.null)
lm.full<-lme(NIHSS~ChaCo_mean+log(volume)+quotient, random=~1|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE), method = "ML")
lm.null<-lme(NIHSS~log(volume)+quotient, random=~1|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE), method = "ML")
anova(lm.full, lm.null)
plot(lm.full)
plot(clinical$volume)
plot(log(clinical$volume))
lm.full<-lme(lighttouch~ChaCo_mean+log(volume)+quotient, random=~1|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE), method = "ML")
lm.null<-lme(lighttouch~log(volume)+quotient, random=~1|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE), method = "ML")
anova(lm.full, lm.null)
fit<-lm(NIHSS~volume+ChaCo_mean+quotient, data=d)
plot(ggpredict(fit, terms = c("volume","ChaCo_mean","quotient")), facets = T, rawdata = T)
plot(ggpredict(fit, terms = c("volume","ChaCo_mean","quotient")), facets = F, rawdata = T)
fit<-lm(NIHSS~volume+ChaCo_mean+quotient, data=d)
plot(ggpredict(fit, terms = c("ChaCo_mean","quotient")), facets = F, rawdata = T)
plot(ggpredict(fit, terms = c("ChaCo_mean","quotient")), facets = T, rawdata = T)
plot(ggpredict(fit, terms = c("ChaCo_mean","Region")), facets = T, rawdata = T)
fit<-lm(NIHSS~volume+ChaCo_mean+quotient+Region, data=d)
plot(ggpredict(fit, terms = c("ChaCo_mean","Region")), facets = T, rawdata = T)
scale_colour_grey()
plot(ggpredict(fit, terms = c("ChaCo_mean","Region")), facets = T, rawdata = T)+
scale_colour_grey()
fit<-lm(NIHSS~volume+(ChaCo_mean+quotient)*Region, data=d)
summary(fit)
anova(fit)
plot(ggpredict(fit, terms = c("ChaCo_mean","Region")), facets = T, rawdata = T)+
scale_colour_grey()
plot(ggpredict(fit, terms = c("ChaCo_mean","Region")), facets = T, rawdata = T, scales="free")+
scale_colour_grey()
ggplot(d, aes(x=ChaCo_mean, y=quotient, color=Region))+
geom_point()+
geom_smooth(method="lm", se=F)+
guides(color=F)
plot(ChaCo$ChaCo_mean)
plot(log(ChaCo$ChaCo_mean+1))
ggplot(d, aes(x=ChaCo_mean, y=vol_overlap, color=Region))+
geom_point()+
geom_smooth(method="lm", se=F)+
guides(color=F)
ggplot(d, aes(x=ChaCo_mean, y=volOverlap, color=Region))+
geom_point()+
geom_smooth(method="lm", se=F)+
guides(color=F)
fit<-lme(ChaCo_mean~volume+quotient, random=~1+quotient+volume|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
summary(fit)
plot(ggpredict(fit, terms = c("ChaCo_mean","Region")), facets = T, rawdata = T, scales="free")+
scale_colour_grey()
plot(ggpredict(fit, facets = T, rawdata = T)+
scale_colour_grey()
plot(ggpredict(fit, facets = T, rawdata = T))+
plot(ggpredict(fit, facets = T, rawdata = T))+
scale_colour_grey()
plot(ggpredict(fit, facets = T, rawdata = T))
fit<-lme(ChaCo_mean~volume+quotient, random=~1+quotient|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
summary(fit)
intervals(fit)
fit<-lme(ChaCo_mean~volume+quotient, random=~quotient|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
summary(fit)
intervals(fit)
fit<-lme(ChaCo_mean~volume+quotient, random=~quotient-1|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
summary(fit)
intervals(fit)
fit<-lme(ChaCo_mean~volume+quotient-1, random=~quotient-1|Region, data=d, control=lmeControl(opt="optim",singular.ok=TRUE, returnObject=TRUE))
summary(fit)
intervals(fit)
plot(ranef(fit))
plot(ranef(fit))
ranef(fit)
?intevals
?intervals
intervals(fit)
qqnorm(resid(fit))
